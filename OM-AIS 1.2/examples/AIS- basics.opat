
(:patch
 (:name "AIS- basics")
 (:doc "")
 (:info
  (:created "2021/01/16 15:02:01")
  (:modified "2021/06/13 12:20:50")
  (:by "om-sharp")
  (:version 1.03))
 (:window (:size (1350 714)) (:position (0 23)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "TEXT-BOX 5")
   (:x 839)
   (:y 381)
   (:w 186)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock :locked)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value "untitled")
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "(0 1 5 8 10 3 9 4 2 11 7 6)")
   (:id 0))
  (:comment
   (:x 868)
   (:y 184)
   (:w 209)
   (:h 23)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text "INVERSION ->>>>>")
   (:id 1))
  (:box
   (:library "OM-AIS")
   (:type :function)
   (:reference (:symbol "I-AIS" "OM-AIS"))
   (:group-id nil)
   (:name "i-ais")
   (:x 901)
   (:y 325)
   (:w 62)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "AIS")
     (:value (:list 0 1 3 2 7 10 8 4 11 5 9 6))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 2))
  (:comment
   (:x 696)
   (:y 545)
   (:w 208)
   (:h 23)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text "<<<- Rotationally normal")
   (:id 3))
  (:comment
   (:x 657)
   (:y 10)
   (:w 403)
   (:h 158)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "\"Considering the series as a cycle, with the first note succeeding the last, there are always two 6s and one of each of the other intervals. Thus among the cyclic permutations of an AIS, there is exactly one other form that fits our definition, with eleven distinct intervals. The other cyclic permutations are degenerate, having two 6s and lacking some other interval. A cyclic permutation whose \"outer interval\" is 6 is rotationally normal\".

Robert Morris and Daniel Starr - The Structure of All-Interval Series")
   (:id 4))
  (:comment
   (:x 286)
   (:y 8)
   (:w 317)
   (:h 128)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "\"An all-interval series is a twelve-tone row among whose eleven successive intervals there are no repetitions, where the interval between two successive pitch-classes (PCs) is the mod-12 difference of the second minus the first. The last note of an AIS is always separated from the first by the interval 6 (...)\".
")
   (:id 5))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "TEXT-BOX 4")
   (:x 882)
   (:y 542)
   (:w 186)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock :locked)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value "untitled")
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "(0 5 7 10 2 3 9 8 4 1 11 6)")
   (:id 6))
  (:box
   (:library "OM-AIS")
   (:type :function)
   (:reference (:symbol "Q-AIS" "OM-AIS"))
   (:group-id nil)
   (:name "q-ais")
   (:x 723)
   (:y 325)
   (:w 66)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "AIS")
     (:value (:list 0 1 3 2 7 10 8 4 11 5 9 6))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 7))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "intervals-mod12")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 500)) (:position (84 92)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 356/3)
       (:y 220)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 187)
       (:y 0)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 356/3)
       (:y 135)
       (:w 77)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:library "OM-AIS")
       (:type :function)
       (:reference (:symbol "INTERVALS-MOD12" "OM-AIS"))
       (:group-id nil)
       (:name "intervals-mod12")
       (:x 16)
       (:y 55)
       (:w 128)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda :lambda)
       (:inputs
        (:input
         (:type :standard)
         (:name "AIS")
         (:value (:list 5 4 0 9 7 2 8 1 3 6 10 11))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "intervals-mod12")
   (:x 582)
   (:y 396)
   (:w 128)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 8))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name "text-view")
   (:x 541)
   (:y 464)
   (:w 150)
   (:h 176)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "output-mode")
     (:value :text)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil))
    (:output (:name "output-mode") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:output-mode :text))
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "(11 8 9 10 7 6 5 2 3 4 1)"
         "(8 9 10 7 6 5 2 3 4 1 6)"
         "(9 10 7 6 5 2 3 4 1 6 11)"
         "(10 7 6 5 2 3 4 1 6 11 8)"
         "(7 6 5 2 3 4 1 6 11 8 9)"
         "(6 5 2 3 4 1 6 11 8 9 10)"
         "(5 2 3 4 1 6 11 8 9 10 7)"
         "(2 3 4 1 6 11 8 9 10 7 6)"
         "(3 4 1 6 11 8 9 10 7 6 5)"
         "(4 1 6 11 8 9 10 7 6 5 2)"
         "(1 6 11 8 9 10 7 6 5 2 3)"
         "(6 11 8 9 10 7 6 5 2 3 4)"
         ""))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 9))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name "text-view")
   (:x 326)
   (:y 461)
   (:w 161)
   (:h 174)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "output-mode")
     (:value :text)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil))
    (:output (:name "output-mode") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:output-mode :text))
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "(0 11 7 4 2 9 3 8 10 1 5 6)"
         "(11 7 4 2 9 3 8 10 1 5 6 0)"
         "(7 4 2 9 3 8 10 1 5 6 0 11)"
         "(4 2 9 3 8 10 1 5 6 0 11 7)"
         "(2 9 3 8 10 1 5 6 0 11 7 4)"
         "(9 3 8 10 1 5 6 0 11 7 4 2)"
         "(3 8 10 1 5 6 0 11 7 4 2 9)"
         "(8 10 1 5 6 0 11 7 4 2 9 3)"
         "(10 1 5 6 0 11 7 4 2 9 3 8)"
         "(1 5 6 0 11 7 4 2 9 3 8 10)"
         "(5 6 0 11 7 4 2 9 3 8 10 1)"
         "(6 0 11 7 4 2 9 3 8 10 1 5)"
         ""))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 10))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "all-rotations")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 500)) (:position (63 69)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 104)
       (:y 323)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "AIS") (:doc "")))
       (:group-id nil)
       (:name "AIS")
       (:x 90)
       (:y 9)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 0.0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 104)
       (:y 264)
       (:w 77)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference rotate)
       (:group-id nil)
       (:name "rotate")
       (:x 24)
       (:y 175)
       (:w 70)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda :lambda)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "nth")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 257)
       (:y 90)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0 1.0 1.0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 4))
      (:box
       (:type :function)
       (:reference om-)
       (:group-id nil)
       (:name "om-")
       (:x 193)
       (:y 132)
       (:w 61)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 162)
       (:y 87)
       (:w 72)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference arithm-ser)
       (:group-id nil)
       (:name "arithm-ser")
       (:x 154)
       (:y 175)
       (:w 96)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "BEGIN")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 10)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "STEP")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 1)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 2 :in 1))))))
   (:group-id nil)
   (:name "all-rotations")
   (:x 1138/3)
   (:y 325)
   (:w 105)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "AIS")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 11))
  (:comment
   (:x 1142)
   (:y 184)
   (:w 107)
   (:h 23)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text "PRIME FORM")
   (:id 12))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "TEXT-BOX 2")
   (:x 1101)
   (:y 383)
   (:w 186)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock :locked)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value "untitled")
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "(0 1 5 8 10 3 9 4 2 11 7 6)")
   (:id 13))
  (:box
   (:library "OM-AIS")
   (:type :function)
   (:reference (:symbol "AIS->PRIME" "OM-AIS"))
   (:group-id nil)
   (:name "ais->prime")
   (:x 1144)
   (:y 243)
   (:w 99)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "AIS")
     (:value (:list 0 1 3 2 7 10 8 4 11 5 9 6))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 14))
  (:box
   (:library "OM-AIS")
   (:type :function)
   (:reference (:symbol "AIS->NORMAL" "OM-AIS"))
   (:group-id nil)
   (:name "ais->normal")
   (:x 232)
   (:y 244)
   (:w 106)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "AIS")
     (:value (:list 0 1 3 2 7 10 8 4 11 5 9 6))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "TEXT-BOX 3")
   (:x 6)
   (:y 270)
   (:w 186)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock :locked)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value "untitled")
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "(5 4 0 9 7 2 8 1 3 6 10 11)")
   (:id 16))
  (:box
   (:library "OM-AIS")
   (:type :function)
   (:reference (:symbol "MC->PC" "OM-AIS"))
   (:group-id nil)
   (:name "mc->pc")
   (:x 75)
   (:y 161)
   (:w 82)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "MIDICENTS")
     (:value
      (:list
       6500
       6400
       7200
       6900
       7900
       7400
       8000
       7300
       7500
       6600
       7000
       5900))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :value)
   (:reference (:symbol "SIMPLE-TEXT-STRING" "LISPWORKS"))
   (:group-id nil)
   (:name "TEXT-BOX")
   (:x 175)
   (:y 342)
   (:w 186)
   (:h 29)
   (:color
    (:color-or-nil (:color (:color 1.0 1.0 1.0 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock :locked)
   (:inputs
    (:input
     (:type :optional)
     (:name "in")
     (:value "untitled")
     (:reactive nil)))
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value "(0 11 7 4 2 9 3 8 10 1 5 6)")
   (:id 18))
  (:comment
   (:x 225)
   (:y 184)
   (:w 123)
   (:h 23)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text "NORMAL FORM")
   (:id 19))
  (:comment
   (:x 33)
   (:y 6)
   (:w 234)
   (:h 23)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text "ALBAN BERG's Lyric Suite series.")
   (:id 20))
  (:box
   (:type :object)
   (:reference chord)
   (:group-id nil)
   (:name "CHORD")
   (:x 60)
   (:y 38)
   (:w 114)
   (:h 102)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LOFFSET")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "LOFFSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "lchan") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord)
     (:slots
      ((:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:group-ids nil)
       (:onset 0)
       (:item-time nil)
       (:item-internal-time nil)
       (:item-type nil)
       (:attributes nil)
       (:lmidic
        (:list
         6500
         6400
         7200
         6900
         7900
         7400
         8000
         7300
         7500
         6600
         7000
         5900))
       (:lvel (:list 100 100 100 100 100 100 100 100 100 100 100 100))
       (:loffset (:list 0 0 0 0 0 0 0 0 0 0 0 0))
       (:ldur
        (:list
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000))
       (:lchan (:list 1 1 1 1 1 1 1 1 1 1 1 1))
       (:lport
        (:list nil nil nil nil nil nil nil nil nil nil nil nil))))))
   (:id 21))
  (:comment
   (:x 565)
   (:y 646)
   (:w 111)
   (:h 23)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text "11-INTERVALS")
   (:id 22))
  (:comment
   (:x 348)
   (:y 645)
   (:w 111)
   (:h 23)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text "PITCH CLASSES")
   (:id 23)))
 (:connections
  (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 2 :in 0)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 18 :in 0)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 14 :in 0)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 15 :in 0)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 16 :in 0)))
  (:connection (:from (:box 21 :out 1)) (:to (:box 17 :in 0)))))