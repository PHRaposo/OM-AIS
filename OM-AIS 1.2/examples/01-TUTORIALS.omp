; OM File Header - Saved 2021/05/01 17:32:11
; (6.18 :patc (om-make-point 60 272) (om-make-point 50 50) (om-make-point 794 465) "" 183 0 "2021/05/01 17:26:53" "2021/05/01 17:32:11")
; End File Header
(in-package :om)(load-lib-for (quote ("OM-AIS")))(setf *om-current-persistent* (om-load-patch1 "01-TUTORIALS" (quote ((let ((box (om-load-boxcomment "comment" (om-make-point 415 47) (quote "PRESS \"t\" TO SEE THE TUTORIAL PATCH FOR EACH FUNCTION") nil (om-make-point 211 3) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MYSTERY-AIS" (quote om-ais::mystery-ais) (quote nil) (om-make-point 710 142) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "SAISS" (quote om-ais::saiss) (quote nil) (om-make-point 725 54) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "LINK-CHORDS-TWO-INSTANCES" (quote om-ais::link-chords-two-instances) (quote nil) (om-make-point 528 140) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "LINK-CHORDS" (quote om-ais::link-chords) (quote nil) (om-make-point 568 49) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "PRIME-QRMI-INVARIANT" (quote om-ais::prime-qrmi-invariant) (quote nil) (om-make-point 390 139) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "NORMAL-QRMI-INVARIANT" (quote om-ais::normal-qrmi-invariant) (quote nil) (om-make-point 388 50) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "PRIME-QI-INVARIANT" (quote om-ais::prime-qi-invariant) (quote nil) (om-make-point 254 136) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "NORMAL-QI-INVARIANT" (quote om-ais::normal-qi-invariant) (quote nil) (om-make-point 255 49) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "PRIME-R-INVARIANT" (quote om-ais::prime-r-invariant) (quote nil) (om-make-point 124 136) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "NORMAL-R-INVARIANT" (quote om-ais::normal-r-invariant) (quote nil) (om-make-point 121 48) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "PRIME-AIS" (quote om-ais::prime-ais) (quote nil) (om-make-point 33 136) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "NORMAL-AIS" (quote om-ais::normal-ais) (quote nil) (om-make-point 28 46) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote nil) nil 6.18))
